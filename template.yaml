AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SlackDoorBellSAM

  App that takes Images from S3 and runs them through face/object Rekognition and then uploads the results to a Slack channel.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst

# Note: You must manually config a SlackDoorBellConfig SecureString value in SSM in the following format:
# '{"token": "xoxb-xxxxxxxx","collection": "xyz_collection","channel": "general"}'

# Note: You must create a rekognition collection before you can use this app:
# aws rekognition create-collection --collection-id xyz_collection --region eu-west-1 
# the id must match what is in your config string above.
# it must also be added to the RekognitionPolicies in Two place in in this file - search for _collection.

# TODOs:
# Auto Create SlackDoorBellConfig in with Encryption in SSM w/ reasonable defaults.

Globals:
  Function:
    Timeout: 60

Resources:
  SlackDoorBellFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: slack_doorbell/
      Handler: app.lambda_handler
      Runtime: python3.7
      Layers:
        - !Ref OpenCVLayer
      Environment:
        Variables: 
          PROCESS_DB_TBL: !Ref DynamoDBTableProcessedHashesTable
          REKOGNITION_DB_TBL: !Ref DynamoDBTableRekognitionCollectionTable
          CONFIG_PARAM: SlackDoorBellConfig 
      Events:
        ImageUploaded:
          Type: S3
          Properties:
            Bucket: !Ref SlackDoorBellBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpg
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectACL
              Resource: '*'
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTableProcessedHashesTable
        - RekognitionReadPolicy:
            CollectionId: ntsj_collection
        - RekognitionDetectOnlyPolicy: {}
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTableRekognitionCollectionTable
        - SSMParameterReadPolicy:
            ParameterName: SlackDoorBellConfig
  
  FaceSeederFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: face_seeder/
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables: 
          REKOGNITION_DB_TBL: !Ref DynamoDBTableRekognitionCollectionTable
          CONFIG_PARAM: SlackDoorBellConfig 
      Events:
        ImageUploaded:
          Type: S3
          Properties:
            Bucket: !Ref FaceSeederBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .jpg
      Policies:
        - AWSLambdaExecute
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectACL
              Resource: '*'
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTableRekognitionCollectionTable
        - RekognitionWriteOnlyAccessPolicy:
            CollectionId: ntsj_collection
        - SSMParameterReadPolicy:
            ParameterName: SlackDoorBellConfig            

  DynamoDBTableProcessedHashesTableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ddb_processed_hashes_table_name
      Type: String
      Value: !Ref DynamoDBTableProcessedHashesTable
      Description: SSM Parameter for DynamoDBTableProcessedHashesTable table name.
  
  DynamoDBTableRekognitionCollectionTableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: ddb_rekognition_table_name
      Type: String
      Value: !Ref DynamoDBTableRekognitionCollectionTable
      Description: SSM Parameter for DynamoDBTableRekognitionCollectionTable table name.                   
  
  SlackDoorBellBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: slack_door_bell_bucket
      Type: String
      Value: !Ref SlackDoorBellBucket
      Description: SSM Parameter for SlackDoorBellBucket S3 Bucket name.  
  
  FaceSeederBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: face_seeder_bucket
      Type: String
      Value: !Ref FaceSeederBucket
      Description: SSM Parameter for FaceSeederBucket S3 Bucket name.        

  SlackDoorBellBucket:
    Type: AWS::S3::Bucket

  FaceSeederBucket:
    Type: AWS::S3::Bucket

  DynamoDBTableProcessedHashesTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: hash
          AttributeType: S
      KeySchema: 
        - AttributeName: hash
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TimeToLiveSpecification: 
        AttributeName: ttl
        Enabled: true

  DynamoDBTableRekognitionCollectionTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: RekognitionId
          AttributeType: S
      KeySchema: 
        - AttributeName: RekognitionId
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 5
        WriteCapacityUnits: 1
  
  SlackDoorBellFunctionLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt SlackDoorBellFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 's3.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !GetAtt SlackDoorBellBucket.Arn       
      
  FaceSeederFunctionLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt FaceSeederFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 's3.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !GetAtt FaceSeederBucket.Arn     
  
  OpenCVLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: slack-doorbell-dependencies
        Description: Dependencies for SlackDoorBell
        ContentUri: dependencies/
        CompatibleRuntimes:
          - python3.7
        LicenseInfo: 'MIT'
        RetentionPolicy: Retain          

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SlackDoorBellFunction:
    Description: "SlackDoorBell Function ARN"
    Value: !GetAtt SlackDoorBellFunction.Arn

  FaceSeederFunction:
    Description: "FaceSeeder Function ARN"
    Value: !GetAtt FaceSeederFunction.Arn

  SlackDoorBellFunctionIamRole:
    Description: "Implicit IAM Role created for SlackDoorBellFunction"
    Value: !GetAtt SlackDoorBellFunctionRole.Arn

  FaceSeederFunctionIamRole:
    Description: "Implicit IAM Role created for FaceSeederFunction"
    Value: !GetAtt FaceSeederFunctionRole.Arn

  DynamoDBTableProcessedHashesTableParameter:
    Description: "SSM Parameter for DynamoDBTableProcessedHashesTable table name"
    Value: !Ref DynamoDBTableProcessedHashesTableParameter
  
  DynamoDBTableRekognitionCollectionTableParameter:
    Description: "SSM Parameter for DynamoDBTableRekognitionCollectionTable table name"
    Value: !Ref DynamoDBTableRekognitionCollectionTableParameter
  
  SlackDoorBellBucketParameter:
    Description: "SSM Parameter for SlackDoorBellBucket S3 Bucket name"
    Value: !Ref SlackDoorBellBucketParameter
  
  FaceSeederBucketParameter:    
    Description: "SSM Parameter for FaceSeederBucket S3 Bucket name"
    Value: !Ref FaceSeederBucketParameter

  SlackDoorBellBucket:
    Description: "S3 Bucket for receiving images for processing to slack"
    Value: !GetAtt SlackDoorBellBucket.Arn

  FaceSeederBucket:
    Description: "S3 Bucket for receiving images to build a face index"
    Value: !GetAtt FaceSeederBucket.Arn

  DynamoDBTableProcessedHashesTable:
    Description: "DynamoDB Table for storing processed image hashes w/ 24 hour TTL"
    Value: !GetAtt DynamoDBTableProcessedHashesTable.Arn

  DynamoDBTableRekognitionCollectionTable:
    Description: "DynamoDB Table for mapping names to Rekognition IDs"
    Value: !GetAtt DynamoDBTableRekognitionCollectionTable.Arn

  SlackDoorBellFunctionLambdaInvokePermission:
    Description: "Required Lambda Permission for S3 Triggers to Work"
    Value: !Ref SlackDoorBellFunctionLambdaInvokePermission

  FaceSeederFunctionLambdaInvokePermission:
    Description: "Required Lambda Permission for S3 Triggers to Work"
    Value: !Ref FaceSeederFunctionLambdaInvokePermission

  OpenCVLayer:
    Description: "OpenCV Python Library for image annotation"
    Value: !Ref OpenCVLayer